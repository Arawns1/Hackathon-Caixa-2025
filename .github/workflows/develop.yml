name: CI/CD - Develop (Preview)

on:
  push:
    branches:
      - develop
      - feature/*
      - hotfix/*

jobs:
  sonar:
    name: Analisar Qualidade do Código com SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Instalar Dependências do Projeto
        run: cd app && npm ci

      - name: Executar Testes e Gerar Cobertura
        run: cd app && npm test -- --code-coverage --watch=false

      - name: Instalar SonarScanner
        run: cd app && npm install -D sonar-scanner

      - name: Analisar Código com SonarScanner
        run: |
          cd app
          npx sonar-scanner \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG_KEY }} \
            -Dsonar.sources=src \
            -Dsonar.tests=src \
            -Dsonar.exclusions=**/*.spec.ts,**/app.routes.ts \
            -Dsonar.test.inclusions=**/*.spec.ts \
            -Dsonar.javascript.lcov.reportPaths=coverage/app-simulacao-emprestimos/lcov.info \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.qualitygate.wait=true

  release-beta:
    name: Gerar Release Beta Automática
    runs-on: ubuntu-latest
    needs: sonar
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout do Código para Release
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar Node.js para Release
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Instalar Dependências do Projeto para Release
        run: cd app && npm ci

      - name: Build do Projeto
        run: cd app && npm run build

      - name: Instalar Semantic Release
        run: cd app && npm install --save-dev semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github @semantic-release/npm

      - name: Executar Semantic Release Beta
        run: cd app && npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GIT_TOKEN }}
          NODE_ENV: development

  deploy-preview:
    name: Deploy Preview na Vercel
    runs-on: ubuntu-latest
    needs: release-beta
    steps:
      - name: Checkout do Código para Deploy
        uses: actions/checkout@v3

      - name: Deploy Preview
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: ""
