name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  sonar:
    name: Analisar com SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Instalar dependÃªncias
        working-directory: ./app
        run: npm ci

      - name: Rodar testes e gerar cobertura
        working-directory: ./app
        run: npm test -- --code-coverage --watch=false

      - name: Instalar SonarScanner
        working-directory: ./app
        run: npm install -D sonar-scanner

      - name: Executar SonarScanner
        working-directory: ./app
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORG_KEY: ${{ secrets.SONAR_ORG_KEY }}
        run: |
          npx sonar-scanner \
          -Dsonar.projectKey=$SONAR_PROJECT_KEY \
          -Dsonar.organization=$SONAR_ORG_KEY \
          -Dsonar.sources=src \
          -Dsonar.tests=src \
          -Dsonar.exclusions=**/*.spec.ts,**/app.routes.ts \
          -Dsonar.test.inclusions=**/*.spec.ts \
          -Dsonar.javascript.lcov.reportPaths=coverage/app-simulacao-emprestimos/lcov.info \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.qualitygate.wait=true

  deploy:
    name: Deploy na Vercel
    runs-on: ubuntu-latest
    needs: sonar
    environment:
      name: Production
      url: ${{ steps.vercel.outputs.preview-url || steps.vercel.outputs.url }}
    concurrency:
      group: Production
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3

      - name: Deploy na Vercel
        id: vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: --prod
